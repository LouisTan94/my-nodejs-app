# .github/workflows/build-and-release.yml
name: Build and Release

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  create-tag-and-release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Get latest tag
        id: get-latest-tag
        run: |
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "LATEST_TAG=$latest_tag" >> $GITHUB_ENV
          
      - name: Bump version and create tag
        id: tag-version
        run: |
          # Extract version numbers
          version=${LATEST_TAG#v}
          IFS='.' read -r major minor patch <<< "$version"
          
          # Increment patch version
          new_patch=$((patch + 1))
          new_tag="v$major.$minor.$new_patch"
          
          echo "NEW_TAG=$new_tag" >> $GITHUB_ENV
          git tag $new_tag
          git push origin $new_tag
          
      - name: Set up environment
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Build application
        run: |
          mkdir -p dist
          npm install
          npm run build
          
      - name: Create tarball
        run: |
          if [ ! -d "dist" ]; then
            echo "Directory 'dist' not found"
            exit 1
          fi
          tar -czf artifact-${NEW_TAG}.tar.gz dist/*
          
      - name: Upload to GitHub Actions storage
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: artifact-${NEW_TAG}.tar.gz
          
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifact-${NEW_TAG}.tar.gz
          tag_name: ${{ env.NEW_TAG }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}